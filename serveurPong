#!/usr/bin/python

import socket
import threading
import pygame
import time
import sys

racket = ['Left', 'Right', 'Top', 'Bottom']
port = 4242

def acceptationClient(client, tabClient, racket):
	#Donne sa raquette
	empl = len(tabClient) -1
	client.send(racket[empl])
	print(racket[empl])

	print('Got one connexion')

def lancerPartie(client, tabClient, ball):
	# send start command
	client.send(b'True')
	print ball
	while True:
		if ball == True:
			print 'before ball coords'
			#ballLeft, ballTop, speed = client.recv(1024).split('*')
			received = client.recv(2024).split('*')
			if 'clientDisconnect' in received:
				for i in tabClient:
					i.close()
				exit()
			print 'Received : ', received
			print 'after ball coords'
			ballLeft = received[0]
			ballBop = received[1]
			speed = received[2]
			trame = ballLeft + '*' + ballBop + '*' + speed
		else:
			speed = client.recv(1024)
			print 'received client speed'
			if speed == '':
				speed = '0'
			print 'affiche speed :', speed
			print type(speed)
			if speed == 'clientDisconnect':
				for i in tabClient:
					i.close()
				break

		
		# send the pos 		
		for i in tabClient:
			if i != client:
				if ball == True:
					i.send(trame)
				else:
					i.send(speed)

		#pygame.time.delay(1000)

def main(racket, port):
	#racket = ['Left', 'Right', 'Top', 'Bottom']
	chaussette = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	chaussette.bind(('127.0.0.1', port))
	chaussette.listen(4)

	tabClient = []
	ball = False
	for i in range (0,2):
		client, addr = chaussette.accept()
		tabClient.append(client)
		threading.Thread(target=acceptationClient, args=(client,tabClient,racket,)).start()
	for i in range (0,2):
		client = tabClient[i]
		if i == 0:
			ball = True
		else:
			ball = False
		threading.Thread(target=lancerPartie, args=(client,tabClient,ball)).start()

main(racket, port)